// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.4
// source: proto/controlplane.proto

package spec

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddressAndPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipaddress *Address `protobuf:"bytes,1,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Port      int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *AddressAndPort) Reset() {
	*x = AddressAndPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressAndPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAndPort) ProtoMessage() {}

func (x *AddressAndPort) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAndPort.ProtoReflect.Descriptor instead.
func (*AddressAndPort) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{0}
}

func (x *AddressAndPort) GetIpaddress() *Address {
	if x != nil {
		return x.Ipaddress
	}
	return nil
}

func (x *AddressAndPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type UnderlayUnknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *Address `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *UnderlayUnknown) Reset() {
	*x = UnderlayUnknown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderlayUnknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderlayUnknown) ProtoMessage() {}

func (x *UnderlayUnknown) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderlayUnknown.ProtoReflect.Descriptor instead.
func (*UnderlayUnknown) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{1}
}

func (x *UnderlayUnknown) GetEndpoint() *Address {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type UnderlayTailscale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *Address `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *UnderlayTailscale) Reset() {
	*x = UnderlayTailscale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderlayTailscale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderlayTailscale) ProtoMessage() {}

func (x *UnderlayTailscale) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderlayTailscale.ProtoReflect.Descriptor instead.
func (*UnderlayTailscale) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{2}
}

func (x *UnderlayTailscale) GetEndpoint() *Address {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type Curve25519Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Curve25519Key) Reset() {
	*x = Curve25519Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Curve25519Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Curve25519Key) ProtoMessage() {}

func (x *Curve25519Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Curve25519Key.ProtoReflect.Descriptor instead.
func (*Curve25519Key) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{3}
}

func (x *Curve25519Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Curve25519KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publickey  *Curve25519Key `protobuf:"bytes,1,opt,name=publickey,proto3" json:"publickey,omitempty"`
	Privatekey *Curve25519Key `protobuf:"bytes,2,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
}

func (x *Curve25519KeyPair) Reset() {
	*x = Curve25519KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Curve25519KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Curve25519KeyPair) ProtoMessage() {}

func (x *Curve25519KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Curve25519KeyPair.ProtoReflect.Descriptor instead.
func (*Curve25519KeyPair) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{4}
}

func (x *Curve25519KeyPair) GetPublickey() *Curve25519Key {
	if x != nil {
		return x.Publickey
	}
	return nil
}

func (x *Curve25519KeyPair) GetPrivatekey() *Curve25519Key {
	if x != nil {
		return x.Privatekey
	}
	return nil
}

type UnderlayWireguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint  *AddressAndPort `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	PublicKey *Curve25519Key  `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *UnderlayWireguard) Reset() {
	*x = UnderlayWireguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderlayWireguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderlayWireguard) ProtoMessage() {}

func (x *UnderlayWireguard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderlayWireguard.ProtoReflect.Descriptor instead.
func (*UnderlayWireguard) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{5}
}

func (x *UnderlayWireguard) GetEndpoint() *AddressAndPort {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *UnderlayWireguard) GetPublicKey() *Curve25519Key {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type UnderlayLinuxKernelWireguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint  *AddressAndPort `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	PublicKey *Curve25519Key  `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *UnderlayLinuxKernelWireguard) Reset() {
	*x = UnderlayLinuxKernelWireguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderlayLinuxKernelWireguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderlayLinuxKernelWireguard) ProtoMessage() {}

func (x *UnderlayLinuxKernelWireguard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderlayLinuxKernelWireguard.ProtoReflect.Descriptor instead.
func (*UnderlayLinuxKernelWireguard) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{6}
}

func (x *UnderlayLinuxKernelWireguard) GetEndpoint() *AddressAndPort {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *UnderlayLinuxKernelWireguard) GetPublicKey() *Curve25519Key {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type ASN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ASN) Reset() {
	*x = ASN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASN) ProtoMessage() {}

func (x *ASN) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASN.ProtoReflect.Descriptor instead.
func (*ASN) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{7}
}

func (x *ASN) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type SourceBasedRoutingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIPRange []*AddressCIDR `protobuf:"bytes,1,rep,name=sourceIPRange,proto3" json:"sourceIPRange,omitempty"`
}

func (x *SourceBasedRoutingOption) Reset() {
	*x = SourceBasedRoutingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceBasedRoutingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceBasedRoutingOption) ProtoMessage() {}

func (x *SourceBasedRoutingOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceBasedRoutingOption.ProtoReflect.Descriptor instead.
func (*SourceBasedRoutingOption) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{8}
}

func (x *SourceBasedRoutingOption) GetSourceIPRange() []*AddressCIDR {
	if x != nil {
		return x.SourceIPRange
	}
	return nil
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Asnumber *ASN           `protobuf:"bytes,2,opt,name=asnumber,proto3" json:"asnumber,omitempty"`
	Address  []*AddressCIDR `protobuf:"bytes,3,rep,name=address,proto3" json:"address,omitempty"`
	// Types that are assignable to Underlay:
	//	*Peer_UnderlayUnknown
	//	*Peer_UnderlayTailscale
	//	*Peer_UnderlayWireguard
	//	*Peer_UnderlayLinuxKernelWireguard
	Underlay  isPeer_Underlay           `protobuf_oneof:"underlay"`
	SbrOption *SourceBasedRoutingOption `protobuf:"bytes,8,opt,name=sbrOption,proto3" json:"sbrOption,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{9}
}

func (x *Peer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Peer) GetAsnumber() *ASN {
	if x != nil {
		return x.Asnumber
	}
	return nil
}

func (x *Peer) GetAddress() []*AddressCIDR {
	if x != nil {
		return x.Address
	}
	return nil
}

func (m *Peer) GetUnderlay() isPeer_Underlay {
	if m != nil {
		return m.Underlay
	}
	return nil
}

func (x *Peer) GetUnderlayUnknown() *UnderlayUnknown {
	if x, ok := x.GetUnderlay().(*Peer_UnderlayUnknown); ok {
		return x.UnderlayUnknown
	}
	return nil
}

func (x *Peer) GetUnderlayTailscale() *UnderlayTailscale {
	if x, ok := x.GetUnderlay().(*Peer_UnderlayTailscale); ok {
		return x.UnderlayTailscale
	}
	return nil
}

func (x *Peer) GetUnderlayWireguard() *UnderlayWireguard {
	if x, ok := x.GetUnderlay().(*Peer_UnderlayWireguard); ok {
		return x.UnderlayWireguard
	}
	return nil
}

func (x *Peer) GetUnderlayLinuxKernelWireguard() *UnderlayLinuxKernelWireguard {
	if x, ok := x.GetUnderlay().(*Peer_UnderlayLinuxKernelWireguard); ok {
		return x.UnderlayLinuxKernelWireguard
	}
	return nil
}

func (x *Peer) GetSbrOption() *SourceBasedRoutingOption {
	if x != nil {
		return x.SbrOption
	}
	return nil
}

type isPeer_Underlay interface {
	isPeer_Underlay()
}

type Peer_UnderlayUnknown struct {
	UnderlayUnknown *UnderlayUnknown `protobuf:"bytes,4,opt,name=underlayUnknown,proto3,oneof"`
}

type Peer_UnderlayTailscale struct {
	UnderlayTailscale *UnderlayTailscale `protobuf:"bytes,5,opt,name=underlayTailscale,proto3,oneof"`
}

type Peer_UnderlayWireguard struct {
	UnderlayWireguard *UnderlayWireguard `protobuf:"bytes,6,opt,name=underlayWireguard,proto3,oneof"`
}

type Peer_UnderlayLinuxKernelWireguard struct {
	UnderlayLinuxKernelWireguard *UnderlayLinuxKernelWireguard `protobuf:"bytes,7,opt,name=underlayLinuxKernelWireguard,proto3,oneof"`
}

func (*Peer_UnderlayUnknown) isPeer_Underlay() {}

func (*Peer_UnderlayTailscale) isPeer_Underlay() {}

func (*Peer_UnderlayWireguard) isPeer_Underlay() {}

func (*Peer_UnderlayLinuxKernelWireguard) isPeer_Underlay() {}

type Peers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *Peers) Reset() {
	*x = Peers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peers) ProtoMessage() {}

func (x *Peers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peers.ProtoReflect.Descriptor instead.
func (*Peers) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{10}
}

func (x *Peers) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type ListPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{11}
}

type ListPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers *Peers `protobuf:"bytes,1,opt,name=peers,proto3" json:"peers,omitempty"`
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{12}
}

func (x *ListPeersResponse) GetPeers() *Peers {
	if x != nil {
		return x.Peers
	}
	return nil
}

type AddressAssignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddressAssignRequest) Reset() {
	*x = AddressAssignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressAssignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAssignRequest) ProtoMessage() {}

func (x *AddressAssignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAssignRequest.ProtoReflect.Descriptor instead.
func (*AddressAssignRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{13}
}

func (x *AddressAssignRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddressAssignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  []*AddressCIDR `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	Asnumber *ASN           `protobuf:"bytes,2,opt,name=asnumber,proto3" json:"asnumber,omitempty"`
}

func (x *AddressAssignResponse) Reset() {
	*x = AddressAssignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressAssignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAssignResponse) ProtoMessage() {}

func (x *AddressAssignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAssignResponse.ProtoReflect.Descriptor instead.
func (*AddressAssignResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{14}
}

func (x *AddressAssignResponse) GetAddress() []*AddressCIDR {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AddressAssignResponse) GetAsnumber() *ASN {
	if x != nil {
		return x.Asnumber
	}
	return nil
}

type RegisterPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *RegisterPeerRequest) Reset() {
	*x = RegisterPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerRequest) ProtoMessage() {}

func (x *RegisterPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerRequest.ProtoReflect.Descriptor instead.
func (*RegisterPeerRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterPeerRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type RegisterPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *RegisterPeerResponse) Reset() {
	*x = RegisterPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPeerResponse) ProtoMessage() {}

func (x *RegisterPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPeerResponse.ProtoReflect.Descriptor instead.
func (*RegisterPeerResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterPeerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type PeerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer             *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	TxBytes          uint64 `protobuf:"varint,2,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxBytes          uint64 `protobuf:"varint,3,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	ExporterEndpoint string `protobuf:"bytes,4,opt,name=exporterEndpoint,proto3" json:"exporterEndpoint,omitempty"`
}

func (x *PeerStatus) Reset() {
	*x = PeerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerStatus) ProtoMessage() {}

func (x *PeerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerStatus.ProtoReflect.Descriptor instead.
func (*PeerStatus) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{17}
}

func (x *PeerStatus) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PeerStatus) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *PeerStatus) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *PeerStatus) GetExporterEndpoint() string {
	if x != nil {
		return x.ExporterEndpoint
	}
	return ""
}

type UpdatePeerStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeersStatus []*PeerStatus `protobuf:"bytes,1,rep,name=peersStatus,proto3" json:"peersStatus,omitempty"`
}

func (x *UpdatePeerStatusRequest) Reset() {
	*x = UpdatePeerStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePeerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePeerStatusRequest) ProtoMessage() {}

func (x *UpdatePeerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePeerStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdatePeerStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{18}
}

func (x *UpdatePeerStatusRequest) GetPeersStatus() []*PeerStatus {
	if x != nil {
		return x.PeersStatus
	}
	return nil
}

type UpdatePeerStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *UpdatePeerStatusResponse) Reset() {
	*x = UpdatePeerStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_controlplane_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePeerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePeerStatusResponse) ProtoMessage() {}

func (x *UpdatePeerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlplane_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePeerStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdatePeerStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_controlplane_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePeerStatusResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_proto_controlplane_proto protoreflect.FileDescriptor

var file_proto_controlplane_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x69, 0x70, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0xff, 0xff, 0x03, 0x28, 0x01, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x11, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x54, 0x61, 0x69, 0x6c, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x75,
	0x72, 0x76, 0x65, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68,
	0x20, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x76, 0x65,
	0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x36, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65,
	0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x22, 0x82,
	0x01, 0x0a, 0x11, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x57, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x1d, 0x0a, 0x03, 0x41, 0x53, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x4e, 0x0a, 0x18, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x49, 0x44, 0x52, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0xe3, 0x03, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x61, 0x73, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x04, 0x2e, 0x41, 0x53, 0x4e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x61, 0x73, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x49, 0x44, 0x52, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x69,
	0x6c, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x69, 0x6c, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x69, 0x6c,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61,
	0x79, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x57, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x63, 0x0a, 0x1c, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x48, 0x00,
	0x52, 0x1c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x73, 0x62, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x62,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x08, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x24, 0x0a, 0x05, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x12, 0x1b, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x12,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x31, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x05,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x75, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x49, 0x44, 0x52, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x08,
	0x61, 0x73, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x41, 0x53, 0x4e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x61, 0x73, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x9b, 0x01, 0x0a,
	0x0a, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x78,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x10, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x32, 0x8f, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x15, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_controlplane_proto_rawDescOnce sync.Once
	file_proto_controlplane_proto_rawDescData = file_proto_controlplane_proto_rawDesc
)

func file_proto_controlplane_proto_rawDescGZIP() []byte {
	file_proto_controlplane_proto_rawDescOnce.Do(func() {
		file_proto_controlplane_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_controlplane_proto_rawDescData)
	})
	return file_proto_controlplane_proto_rawDescData
}

var file_proto_controlplane_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_controlplane_proto_goTypes = []interface{}{
	(*AddressAndPort)(nil),               // 0: AddressAndPort
	(*UnderlayUnknown)(nil),              // 1: UnderlayUnknown
	(*UnderlayTailscale)(nil),            // 2: UnderlayTailscale
	(*Curve25519Key)(nil),                // 3: Curve25519Key
	(*Curve25519KeyPair)(nil),            // 4: Curve25519KeyPair
	(*UnderlayWireguard)(nil),            // 5: UnderlayWireguard
	(*UnderlayLinuxKernelWireguard)(nil), // 6: UnderlayLinuxKernelWireguard
	(*ASN)(nil),                          // 7: ASN
	(*SourceBasedRoutingOption)(nil),     // 8: SourceBasedRoutingOption
	(*Peer)(nil),                         // 9: Peer
	(*Peers)(nil),                        // 10: Peers
	(*ListPeersRequest)(nil),             // 11: ListPeersRequest
	(*ListPeersResponse)(nil),            // 12: ListPeersResponse
	(*AddressAssignRequest)(nil),         // 13: AddressAssignRequest
	(*AddressAssignResponse)(nil),        // 14: AddressAssignResponse
	(*RegisterPeerRequest)(nil),          // 15: RegisterPeerRequest
	(*RegisterPeerResponse)(nil),         // 16: RegisterPeerResponse
	(*PeerStatus)(nil),                   // 17: PeerStatus
	(*UpdatePeerStatusRequest)(nil),      // 18: UpdatePeerStatusRequest
	(*UpdatePeerStatusResponse)(nil),     // 19: UpdatePeerStatusResponse
	(*Address)(nil),                      // 20: Address
	(*AddressCIDR)(nil),                  // 21: AddressCIDR
}
var file_proto_controlplane_proto_depIdxs = []int32{
	20, // 0: AddressAndPort.ipaddress:type_name -> Address
	20, // 1: UnderlayUnknown.endpoint:type_name -> Address
	20, // 2: UnderlayTailscale.endpoint:type_name -> Address
	3,  // 3: Curve25519KeyPair.publickey:type_name -> Curve25519Key
	3,  // 4: Curve25519KeyPair.privatekey:type_name -> Curve25519Key
	0,  // 5: UnderlayWireguard.endpoint:type_name -> AddressAndPort
	3,  // 6: UnderlayWireguard.publicKey:type_name -> Curve25519Key
	0,  // 7: UnderlayLinuxKernelWireguard.endpoint:type_name -> AddressAndPort
	3,  // 8: UnderlayLinuxKernelWireguard.publicKey:type_name -> Curve25519Key
	21, // 9: SourceBasedRoutingOption.sourceIPRange:type_name -> AddressCIDR
	7,  // 10: Peer.asnumber:type_name -> ASN
	21, // 11: Peer.address:type_name -> AddressCIDR
	1,  // 12: Peer.underlayUnknown:type_name -> UnderlayUnknown
	2,  // 13: Peer.underlayTailscale:type_name -> UnderlayTailscale
	5,  // 14: Peer.underlayWireguard:type_name -> UnderlayWireguard
	6,  // 15: Peer.underlayLinuxKernelWireguard:type_name -> UnderlayLinuxKernelWireguard
	8,  // 16: Peer.sbrOption:type_name -> SourceBasedRoutingOption
	9,  // 17: Peers.peers:type_name -> Peer
	10, // 18: ListPeersResponse.peers:type_name -> Peers
	21, // 19: AddressAssignResponse.address:type_name -> AddressCIDR
	7,  // 20: AddressAssignResponse.asnumber:type_name -> ASN
	9,  // 21: RegisterPeerRequest.peer:type_name -> Peer
	9,  // 22: PeerStatus.peer:type_name -> Peer
	17, // 23: UpdatePeerStatusRequest.peersStatus:type_name -> PeerStatus
	11, // 24: ControlPlaneService.ListPeers:input_type -> ListPeersRequest
	13, // 25: ControlPlaneService.AddressAssign:input_type -> AddressAssignRequest
	15, // 26: ControlPlaneService.RegisterPeer:input_type -> RegisterPeerRequest
	18, // 27: ControlPlaneService.UpdatePeerStatus:input_type -> UpdatePeerStatusRequest
	12, // 28: ControlPlaneService.ListPeers:output_type -> ListPeersResponse
	14, // 29: ControlPlaneService.AddressAssign:output_type -> AddressAssignResponse
	16, // 30: ControlPlaneService.RegisterPeer:output_type -> RegisterPeerResponse
	19, // 31: ControlPlaneService.UpdatePeerStatus:output_type -> UpdatePeerStatusResponse
	28, // [28:32] is the sub-list for method output_type
	24, // [24:28] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_controlplane_proto_init() }
func file_proto_controlplane_proto_init() {
	if File_proto_controlplane_proto != nil {
		return
	}
	file_proto_ip_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_controlplane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressAndPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderlayUnknown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderlayTailscale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Curve25519Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Curve25519KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderlayWireguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderlayLinuxKernelWireguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceBasedRoutingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressAssignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressAssignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePeerStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_controlplane_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePeerStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_controlplane_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Peer_UnderlayUnknown)(nil),
		(*Peer_UnderlayTailscale)(nil),
		(*Peer_UnderlayWireguard)(nil),
		(*Peer_UnderlayLinuxKernelWireguard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_controlplane_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_controlplane_proto_goTypes,
		DependencyIndexes: file_proto_controlplane_proto_depIdxs,
		MessageInfos:      file_proto_controlplane_proto_msgTypes,
	}.Build()
	File_proto_controlplane_proto = out.File
	file_proto_controlplane_proto_rawDesc = nil
	file_proto_controlplane_proto_goTypes = nil
	file_proto_controlplane_proto_depIdxs = nil
}
